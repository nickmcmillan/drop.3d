html,
body {
  overscroll-behavior-y: contain;
}

body {
  margin: 0;
  overflow-y: hidden;
  padding: 0;
  font-family: sans-serif;
  position: fixed;
}

.cursor-grab {
  cursor: move; /* fallback: no `url()` support or images disabled */
  // cursor: -webkit-grab; /* Chrome 1-21, Safari 4+ */
  // cursor:    -moz-grab; /* Firefox 1.5-26 */
  cursor:         grab; /* W3C standards syntax, should come least */
}

.cursor-grabbing {
  cursor: -webkit-grabbing;
  cursor:    -moz-grabbing;
  cursor:         grabbing;
}


// dat.gui
// http://brm.io/dat-gui-light-theme/
.dg.ac {
  display: none;
}

@media (min-width: 60rem) {
  .dg.ac {
    display: inherit;
  }
}

.dg.main .close-button {
  background-color: #ccc;
}

.dg.main .close-button:hover {
  background-color: #ddd;
}

.dg {
  color: #555;
  text-shadow: none !important;
}

.dg.main::-webkit-scrollbar-thumb {
  background: #bbb;
}

.dg li:not(.folder) {
  background: #fafafa;
  border-bottom: 1px solid #ddd;
}

.dg li.save-row .button {
  text-shadow: none !important;
}

.dg .cr.function:hover,.dg .cr.boolean:hover {
  background: #fff;
}

.dg .c input[type=text] {
  background: #e9e9e9;
}

.dg .c input[type=text]:hover {
  background: #eee;
}

.dg .c input[type=text]:focus {
  background: #eee;
  color: #555;
}

.dg .c .slider {
  background: #e9e9e9;
}

.dg .c .slider:hover {
  background: #eee;
}